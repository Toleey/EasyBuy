<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.easybuy.dao.product.ProductMapper">
    <cache eviction="FIFO" flushInterval="600000" size="512" readOnly="true" />

    <update id="updateStock">
        update easybuy_product set stock=#{quantity} where id=#{id}
    </update>

    <insert id="add" parameterType="Product">
		insert into
		    easybuy_product(name,description,price,stock,categoryLevel1Id,categoryLevel2Id,categoryLevel3Id,fileName)
		values
		    (#{name},#{description},#{price},#{stock},#{categoryLevel1Id},#{categoryLevel2Id},#{categoryLevel3Id},#{fileName})
	</insert>

    <update id="update" parameterType="Product">
        update
            easybuy_product
        set
            name=#{name},fileName=#{fileName},categoryLevel1Id=#{categoryLevel1Id},categoryLevel2Id=#{categoryLevel2Id},categoryLevel3Id=#{categoryLevel3Id}
        where
            id=#{id}
    </update>

    <delete id="deleteProductById" parameterType="Integer">
        delete from easybuy_product where id = #{id}
    </delete>

    <select id="getProductById" parameterType="Integer" resultType="Product">
        select
            id,name,description,price,stock,categoryLevel1Id,categoryLevel2Id,categoryLevel3Id,fileName,isDelete
        from
            easybuy_product
        where
            id = #{id}
    </select>

    <select id="getProductList" resultType="Product">
        select
        id,name,description,price,stock,categoryLevel1Id,categoryLevel2Id,categoryLevel3Id,fileName,isDelete
        from easybuy_product where 1=1
        <if test="proName !=null and proName !=''">
            and name like CONCAT('%',#{proName},'%')
        </if>
        <if test="categoryId !=null and categoryId !=''">
            and (categoryLevel1Id = #{categoryId} or
            categoryLevel2Id=#{categoryId} or
            categoryLevel3Id=#{categoryId} )
        </if>
        limit #{currentPageNo},#{pageSize}
    </select>

    <select id="queryProductCount" resultType="Integer">
        select
        count(*) count
        from
        easybuy_product
        <trim prefix="where" prefixOverrides="and|or">
            <if test="proName !=null and proName !=''">
                name like concat('%',#{proName},'%')
            </if>
            <if test="categoryId !=null and categoryId !=''">
                and (categoryLevel1Id = #{categoryId} or categoryLevel2Id=#{categoryId} or categoryLevel3Id=#{categoryId} )
            </if>
        </trim>
    </select>

</mapper>